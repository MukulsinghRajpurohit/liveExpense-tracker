{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","fixAmount","setFixAmount","expenseAmount","setExpenseAmount","date","setDate","itemName","setItemName","expenses","setExpenses","setEmailSent","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","onClick","fileContent","map","expense","index","join","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","remove","emailContent","toEmail","mailtoUrl","encodeURIComponent","window","location","Container","fluid","reduce","total","exp","parseInt","newExpense","prevExpenses","htmlFor","onChange","target","length","Table","striped","bordered","key","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f456083.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA7FWMXOdCqb1yFLuNiBXI43iHCQYBGFig\",\n  authDomain: \"promp321-d0c2e.firebaseapp.com\",\n  projectId: \"promp321-d0c2e\",\n  storageBucket: \"promp321-d0c2e.appspot.com\",\n  messagingSenderId: \"17051114348\",\n  appId: \"1:17051114348:web:2a6bacfd1e541138e17149\",\n  measurementId: \"G-EF1FBBP4JE\"\n};\n\n// Initialize Firebase app\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport default firebase;\n","import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Signup() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from \"react\";\nimport { Button, Alert, Navbar, Nav, Table, Container } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  const [fixAmount, setFixAmount] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [itemName, setItemName] = useState(\"\");\n  const [expenses, setExpenses] = useState([]);\n  const [emailSent, setEmailSent] = useState(false);\n\n  async function handleLogout() {\n    setError(\"\");\n    setEmailSent(false);\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // Handle the submission logic here\n    // You can access the input values with fixAmount, expenseAmount, date, and itemName\n\n    // Calculate remaining amount after deducting the expense\n    const remainingAmount =\n      fixAmount -\n      expenses.reduce((total, exp) => total + parseInt(exp.expenseAmount), 0);\n\n    // Create a new expense object\n    const newExpense = {\n      itemName,\n      expenseAmount,\n      date,\n    };\n\n    // Add the new expense to the expenses array\n    setExpenses((prevExpenses) => [...prevExpenses, newExpense]);\n\n    // Clear the input fields\n    setExpenseAmount(\"\");\n    setDate(\"\");\n    setItemName(\"\");\n  }\n\n  function handleShare() {\n    // Create the email content\n    const emailContent = `\n      Expense List:\n      ${expenses\n        .map(\n          (expense, index) =>\n            `${index + 1}. Item Name: ${expense.itemName}, Expense Amount: ${expense.expenseAmount}, Date: ${expense.date}`\n        )\n        .join(\"\\n\")}`;\n\n    const emailSubject = \"Expense List\";\n    const toEmail = currentUser.email;\n\n    // Construct the mailto URL\n    const mailtoUrl = `mailto:${toEmail}?subject=${encodeURIComponent(\n      emailSubject\n    )}&body=${encodeURIComponent(emailContent)}`;\n\n    // Open the user's default email client\n    window.location.href = mailtoUrl;\n  }\n\n  function handleDownload() {\n    // Create the file content\n    const fileContent = `Expense List:\\n${expenses\n      .map(\n        (expense, index) =>\n          `${index + 1}. Item Name: ${expense.itemName}, Expense Amount: ${expense.expenseAmount}, Date: ${expense.date}`\n      )\n      .join(\"\\n\")}`;\n  \n    // Create a Blob from the file content\n    const blob = new Blob([fileContent], { type: \"text/plain\" });\n  \n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n  \n    // Create a temporary <a> element to trigger the download\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"expense-list.txt\";\n    link.click();\n  \n    // Clean up the URL and the temporary <a> element\n    URL.revokeObjectURL(url);\n    link.remove();\n  }\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\" variant=\"light\" className=\"fixed-top w-100\">\n        <Navbar.Brand as={Link} to=\"/\">\n          Expense Tracker App\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary ml-2\"\n              onClick={handleDownload}\n            >\n              Download\n            </button>\n            <Button variant=\"link\" onClick={handleShare}>\n              Share\n            </Button>\n            <Nav.Link as={Link} to=\"/update-profile\">\n              Update Profile\n            </Nav.Link>\n            <Button variant=\"link\" onClick={handleLogout}>\n              Log Out\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container fluid className=\"mt-4\">\n        <div className=\"bg-white p-4\">\n          <h2 className=\"text-center mb-4\">Expense Calculator</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"fixAmount\">Fixed Amount:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"fixAmount\"\n                value={fixAmount}\n                onChange={(e) => setFixAmount(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"expenseAmount\">Expense Amount:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"expenseAmount\"\n                value={expenseAmount}\n                onChange={(e) => setExpenseAmount(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"date\">Date:</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"itemName\">Item Name:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"itemName\"\n                value={itemName}\n                onChange={(e) => setItemName(e.target.value)}\n              />\n            </div>\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Add Expense\n              </button>\n            </div>\n          </form>\n        </div>\n      </Container>\n\n      <Container fluid className=\"mt-4\">\n        <div className=\"bg-white p-4 mb-4 container-fluid w-100\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"text-center mb-4\">Expense List</h2>\n              {expenses.length === 0 ? (\n                <p className=\"text-center\">No expenses added yet.</p>\n              ) : (\n                <Table striped bordered>\n                  <thead>\n                    <tr>\n                      <th>Item Name</th>\n                      <th>Expense Amount</th>\n                      <th>Date</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {expenses.map((expense, index) => (\n                      <tr key={index}>\n                        <td>{expense.itemName}</td>\n                        <td>{expense.expenseAmount}</td>\n                        <td>{expense.date}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n              {fixAmount && (\n                <div className=\"text-center mt-3\">\n                  <strong>Remaining Amount:</strong>{\" \"}\n                  {fixAmount -\n                    expenses.reduce(\n                      (total, exp) => total + parseInt(exp.expenseAmount),\n                      0\n                    )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Login() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to log in\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setMessage(\"\")\n      setError(\"\")\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage(\"Check your inbox for further instructions\")\n    } catch {\n      setError(\"Failed to reset password\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport Signup from \"./Signup\"\nimport { Container } from \"react-bootstrap\"\nimport { AuthProvider } from \"../contexts/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}